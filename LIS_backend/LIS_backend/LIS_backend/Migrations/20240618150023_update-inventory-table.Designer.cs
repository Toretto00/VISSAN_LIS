// <auto-generated />
using System;
using LIS_backend.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LIS_backend.Migrations
{
    [DbContext(typeof(LISContext))]
    [Migration("20240618150023_update-inventory-table")]
    partial class updateinventorytable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LIS_backend.Models.Category", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("LIS_backend.Models.Inventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("created")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("locationid")
                        .HasColumnType("int");

                    b.Property<string>("updated")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("locationid");

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("LIS_backend.Models.Inventory_Product", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("created")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("inventoryId")
                        .HasColumnType("int");

                    b.Property<int?>("productid")
                        .HasColumnType("int");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<string>("updated")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("inventoryId");

                    b.HasIndex("productid");

                    b.ToTable("Inventory_Products");
                });

            modelBuilder.Entity("LIS_backend.Models.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("created")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("updated")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("userid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("userid");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("LIS_backend.Models.Invoice_Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("created")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("invoiceId")
                        .HasColumnType("int");

                    b.Property<int?>("productid")
                        .HasColumnType("int");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<string>("updated")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("invoiceId");

                    b.HasIndex("productid");

                    b.ToTable("Invoice_Products");
                });

            modelBuilder.Entity("LIS_backend.Models.Product", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("categoryid")
                        .HasColumnType("int");

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("created")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("updated")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("categoryid");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("LIS_backend.Models.StoreLocation", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("retailname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("retailsystem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("shortname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("storeid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("warehouseid")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("StoreLocation");
                });

            modelBuilder.Entity("LIS_backend.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("LIS_backend.Models.User_Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("created")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("storeLocationid")
                        .HasColumnType("int");

                    b.Property<string>("updated")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("userid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("storeLocationid");

                    b.HasIndex("userid");

                    b.ToTable("User_Locations");
                });

            modelBuilder.Entity("LIS_backend.Models.Inventory", b =>
                {
                    b.HasOne("LIS_backend.Models.StoreLocation", "location")
                        .WithMany()
                        .HasForeignKey("locationid");

                    b.Navigation("location");
                });

            modelBuilder.Entity("LIS_backend.Models.Inventory_Product", b =>
                {
                    b.HasOne("LIS_backend.Models.Inventory", "inventory")
                        .WithMany()
                        .HasForeignKey("inventoryId");

                    b.HasOne("LIS_backend.Models.Product", "product")
                        .WithMany()
                        .HasForeignKey("productid");

                    b.Navigation("inventory");

                    b.Navigation("product");
                });

            modelBuilder.Entity("LIS_backend.Models.Invoice", b =>
                {
                    b.HasOne("LIS_backend.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("userid");

                    b.Navigation("user");
                });

            modelBuilder.Entity("LIS_backend.Models.Invoice_Product", b =>
                {
                    b.HasOne("LIS_backend.Models.Invoice", "invoice")
                        .WithMany()
                        .HasForeignKey("invoiceId");

                    b.HasOne("LIS_backend.Models.Product", "product")
                        .WithMany()
                        .HasForeignKey("productid");

                    b.Navigation("invoice");

                    b.Navigation("product");
                });

            modelBuilder.Entity("LIS_backend.Models.Product", b =>
                {
                    b.HasOne("LIS_backend.Models.Category", "category")
                        .WithMany()
                        .HasForeignKey("categoryid");

                    b.Navigation("category");
                });

            modelBuilder.Entity("LIS_backend.Models.User_Location", b =>
                {
                    b.HasOne("LIS_backend.Models.StoreLocation", "storeLocation")
                        .WithMany()
                        .HasForeignKey("storeLocationid");

                    b.HasOne("LIS_backend.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("userid");

                    b.Navigation("storeLocation");

                    b.Navigation("user");
                });
#pragma warning restore 612, 618
        }
    }
}
